<?xml version="1.0" encoding="utf-8" ?>

<!--
SPDX-License-Identifier: BSD-3-Clause
SPDX-FileCopyrightText: Czech Technical University in Prague
-->

<launch>

  <arg name="robot" default="spot-3"/><group if="$(eval {'ctu-robot': 0, 'flip': 0, 'marv-robot': 0, 'spot-3': 0}[robot])"/>


  <!-- Example launch file for 6 raw cameras -->
  <arg name="image_transport" default="compressed" />
  <arg name="point_cloud_transport" default="raw" />
  <arg name="tf_prefix" default="" />

  <node name="point_cloud_color" pkg="nodelet" type="nodelet"
        args="standalone point_cloud_color/point_cloud_color" respawn="true" output="screen">

    <!-- remap the image input and point cloud input-->
    <remap from="camera_0/image" to="/viz/camera_4/image_segmentation" if="$(eval robot == 'ctu-robot')"/>
    <remap from="TODO" to="camera_0/image" if="$(eval robot == 'flip')"/>
    <remap from="/camera_front/color_image/segmentation" to="camera_0/image" if="$(eval robot == 'marv-robot')"/>
    <remap from="/camera_front/color_image/segmentation" to="camera_0/image" if="$(eval robot == 'spot-3')"/>

    <remap from="/cloud_in" to="/points_filtered" if="$(eval robot == 'ctu-robot')"/>
    <remap from="TODO" to="cloud_in" if="$(eval robot == 'flip')"/>
    <remap from="TODO" to="cloud_in" if="$(eval robot == 'marv-robot')"/>
    <remap from="TODO" to="cloud_in" if="$(eval robot == 'spot-3')"/>

    <remap from="camera_0/camera_info" to="/viz/camera_4/camera_info" if="$(eval robot == 'ctu-robot')"/>
    <remap from="TODO" to="camera_0//camera_info" if="$(eval robot == 'flip')"/>
    <remap from="TODO" to="camera_0//camera_info" if="$(eval robot == 'marv-robot')"/>
    <remap from="TODO" to="camera_0//camera_info" if="$(eval robot == 'spot-3')"/>

    <param name="image_transport"        value="$(arg image_transport)"/>
    <param name="point_cloud_transport"  value="$(arg point_cloud_transport)"/>
    <param name="fixed_frame"            value="$(arg tf_prefix)base_link"/>
    <param name="num_cameras"            value="1"/>
    <param name="max_image_age"          value="2000000000.0"/><!--WARNING TODO-->
    <param name="use_first_valid"        value="true"/>
    <param name="image_queue_size"       value="1"/>
    <param name="point_cloud_queue_size" value="50"/>
    <param name="wait_for_transform"     value="0.5"/>
    <param name="default_color"          value="0x00000000"/>
    <param name="synchronize"            value="false"/>
  </node>
</launch>

